<color=#800020>Strings</color>	

Strings are sequences of characters that can represent text or data. They are similar to lists in that they are ordered collections, but instead of holding various data types like lists, strings primarily consist of characters. You can perform various operations on strings to manipulate and work with text. Here's how you can work with strings:

CODE
===========================
<color=#23D1BA># Creating a string</color>
my_string = "Hello, World!"

<color=#23D1BA># Accessing characters</color>
first_char = my_string[0]  <color=#23D1BA># Access the first character (index 0)</color>
last_char = my_string[-1]  <color=#23D1BA># Access the last character (index -1)</color>
substring = my_string[7:12]  <color=#23D1BA># Get a substring (index 7 to 11)</color>
print(first_char, last_char, substring)  <color=#23D1BA># H ! World</color>

<color=#23D1BA># String length</color>
length = len(my_string)  <color=#23D1BA># Get the length of the string</color>
print(length)  <color=#23D1BA># 13</color>

<color=#23D1BA># Concatenating strings</color>
string1 = "Hello"
string2 = "World"
concatenated_string = string1 + ", " + string2  <color=#23D1BA># Concatenate two strings</color>
print(concatenated_string)  <color=#23D1BA># Hello, World</color>

<color=#23D1BA># Checking for substrings</color>
contains_hello = "Hello" in my_string  <color=#23D1BA># Check if "Hello" is in the string</color>
print(contains_hello)  <color=#23D1BA># True</color>

<color=#23D1BA># Finding substrings</color>
index_of_comma = my_string.index(",")  <color=#23D1BA># Get the index of the comma</color>
substring_after_comma = my_string[index_of_comma + 2:]  <color=#23D1BA># Get substring after the comma</color>
print(index_of_comma, substring_after_comma)  <color=#23D1BA># 5 World!</color>

<color=#23D1BA># Counting occurrences</color>
count_of_l = my_string.count("l")  <color=#23D1BA># Count the number of times "l" appears</color>
print(count_of_l)  <color=#23D1BA># 3</color>

<color=#23D1BA># Converting to lowercase and uppercase</color>
lowercase_string = my_string.lower()  <color=#23D1BA># Convert to lowercase</color>
uppercase_string = my_string.upper()  <color=#23D1BA># Convert to uppercase</color>
print(lowercase_string, uppercase_string)  <color=#23D1BA># hello, world! HELLO, WORLD!</color>

<color=#23D1BA># Stripping whitespace</color>
whitespace_string = "  This is a string with spaces   "
stripped_string = whitespace_string.strip()  <color=#23D1BA># Remove leading and trailing spaces</color>
print(stripped_string)  <color=#23D1BA># "This is a string with spaces"</color>

<color=#23D1BA># Splitting into a list</color>
word_list = my_string.split(",")  <color=#23D1BA># Split the string at commas into a list</color>
print(word_list)  <color=#23D1BA># ['Hello', ' World!']</color>

<color=#23D1BA># Joining a list of strings</color>
joined_string = ", ".join(word_list)  <color=#23D1BA># Join the list with commas</color>
print(joined_string)  <color=#23D1BA># Hello, World!</color>

<color=#23D1BA># Replacing substrings</color>
new_string = my_string.replace("World", "Python")  <color=#23D1BA># Replace "World" with "Python"</color>
print(new_string)  <color=#23D1BA># Hello, Python!</color>

<color=#23D1BA># Checking for character types</color>
is_alpha = my_string.isalpha()  <color=#23D1BA># Check if all characters are alphabetic</color>
is_digit = my_string.isdigit()  <color=#23D1BA># Check if all characters are digits</color>

<color=#23D1BA># Formatting strings</color>
formatted_string = "Value: {:.2f}".format(3.14159)  <color=#23D1BA># Format a floating-point number</color>
print(formatted_string)  <color=#23D1BA># Value: 3.14</color>

===========================